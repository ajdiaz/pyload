#! /bin/bash

target pyload: zlib bzip2 readline ${MODULES} python xlib

target python:
python () {
  uncompress $PYTHON_URL $BUILD/python
  cd $BUILD/python

  # This removal makes Python-ast.c not autogenerated. Autogeneration would   
  # need a working Python binary, which we don't have yet. 
  #sed -i /ASDLGEN/d Makefile.pre.in
  fake_config_guess config.guess

  # Run configure for static python
  ./configure --disable-shared --disable-ipv6

  # POSIX_SEMAPHORES_NOT_ENABLED works erratically with uclibc
  replace pyconfig.h '^#define POSIX_SEMAPHORES_NOT_ENABLED 1$' \
                     '^#define POSIX_SEMAPHORES_NOT_ENABLED 1$' \
                     '/* #undef POSIX_SEMAPHORES_NOT_ENABLED */' 

  cp $FILES/Modules.Setup-${PYTHON_VER} ./Modules/Setup &&
    touch ./Modules/Setup

  for mod in ${MODULES}; do
    replace ./Modules/Setup "^#MOD:${mod} " "#MOD:${mod} "
    case "$mod" in
      greenlet)
        ln -sf ${BUILD}/greenlet ./Modules/greenlet;;
    esac
  done
  make Makefile


  # Remove -O? and -g and add -O2 to OPT, CFLAGS and SLPFLAGS
  replace Makefile '^OPT[ ]*='      '-(?:g|O\d*)(?!\S)'
  replace Makefile '^OPT[ ]*='      '$' ' -O2'
  replace Makefile '^CFLAGS[ ]*='   '-(?:g|O\d*)(?!\S)'
  replace Makefile '^CFLAGS[ ]*='   '$' ' -O2'
  replace Makefile '^SLPFLAGS[ ]*=' '-(?:g|O\d*)(?!\S)'
  replace Makefile '^SLPFLAGS[ ]*=' '$' ' -O2'
  replace Makefile '@SLPFLAGS@'     '@SLPFLAGS@' '-fno-omit-frame-pointer -O2'

  # patch getpath.c to find modules into pyload
  if ! grep -q StaticPython-appended ./Modules/getpath.c; then
    replace ./Modules/getpath.c '^calculate_path' \
      'calculate_path' 'calculate_path(void);\nstatic void calculate_path_not'
    cat $FILES/getpath.c-${PYTHON_VER} >> ./Modules/getpath.c
  fi

  # patch _sqlite module
  if ! grep -q '^#define MODULE_NAME ' ./Modules/_sqlite/util.h; then
    replace ./Modules/_sqlite/util.h \
            '#define PYSQLITE_UTIL_H' \
            '#define PYSQLITE_UTIL_H' \
            '#define PYSQLITE_UTIL_H\n#define MODULE_NAME \"_sqlite3\"  /* StaticPython */\n'
  fi                                                                            

  for f in ./Modules/_sqlite/*.c; do
    if ! grep -q '^#include "util.h"' "$f"; then
      echo '#include "util.h"  /* StaticPython */' > "${f}.tmp"
      cat "${f}" >> "${f}.tmp"
      mv "${f}.tmp" "${f}"
    fi
  done

  cp $FILES/pyload.c-${PYTHON_VER} ./Modules/pyload.c
  cat $FILES/Makefile.pyload-${PYTHON_VER} >> Makefile

  make pyload || exit 1
  make python || exit 1

  ${STRIP} pyload
  ${UPXBIN:-:} pyload

  ${STRIP} python
  ${UPXBIN:-:} python
}

target xlib: python
xlib() {
  cd ${BUILD}/python

  rm -rf xlib xlib.zip && cp -R ./Lib xlib || exit 1

  for patch in $FILES/patch/${PYTHON_VER}/*.patch; do
    (cd xlib && patch -p1 < "${patch}";) || exit 1
  done

  find xlib -iname "*.pyc" -exec rm -f {} \;

  rm -f xlib/plat-*/regen
  rm -rf xlib/email/test xlib/bdddb xlib/ctypes* \
         xlib/idlelib xlib/lib-tk xlib/lib2to3 xlib/msilib \
         xlib/plat-aix* xlib/plat-atheos xlib/plat-beos* \
         xlib/plat-freebsd* xlib/plat-irix* xlib/plat-unixware* \
         xlib/plat-mac xlib/plat-netbsd* xlib/plat-next* \
         xlib/plat-os2* xlib/plat-riscos xlib/plat-sunos* \
         xlib/site-packages* xlib/sqlite3/test/* xlib/turtle* \
         xlib/bsddb/test xlib/test xlib/*.egg-info xlib/tkinter || exit 1

  # fake ctypes is required for working with setuptools with try to laod
  # ctypes for windows support which, actually, we don't need.
  touch xlib/ctypes.py

  case "$UNAME" in
    Linux) rm -rf xlib/plat-linux2;;
    *) exit 1;; # unsupported
  esac

  cd xlib
  rm -f *~ */*~ || return "$?"
  rm -f ../xlib.zip || return "$?"
  ${ADVZIP:-zip -9r} ../xlib.zip * || return "$?"
}

